#!/usr/bin/env ruby

require 'fileutils'
require 'yaml'
require 'time'

class ToastHaiku

  DEPLOY_TO = "drtoast@drtoast.com:drtoast.com/site"
  LINK_TYPES = [:info, :facebook, :tickets]

  class Post
    def initialize(options)
      @options = options
      @title =      options[:title]
      @categories = options[:categories]
      @tags =       options[:tags]
      @post_date =  options[:post_date]
      @event_date = parse_time(options[:event_date])
    end

    def save_show_post
      puts "creating #{post_path}"
      File.open(post_path, "w") do |f|

        content = [
          front_matter.to_yaml,
          '---',
          '',
          dateline,
          link_refs,
          '',
          flyer_link,
          ''
        ] + links

        content.compact.each do |l|
          f.puts l
        end

      end
      ToastHaiku.run "subl #{post_path}"
    end

    def save_image
      puts "creating #{image_dir}"
      FileUtils.mkdir_p image_dir
      ToastHaiku.run "open #{image_dir}"
    end

  private

    def front_matter
      {
        'layout' => 'post',
        'title' => @title,
        'date' => @post_date,
        'categories' => @categories
      }
    end

    def parse_time(string)
      Time.parse(string).localtime
    end

    def slug
      value = @title.gsub(/[^\x00-\x7F]/n, '').to_s
      value.gsub!(/[']+/, '')
      value.gsub!(/\W+/, ' ')
      value.strip!
      value.downcase!
      value.gsub!(' ', '-')
    end

    def dateline
      "**" + @event_date.strftime("%A, %B %d, %Y, %l:%M%P") + "** - "
    end

    def flyer_link
      "![flyer](/#{image_dir}/#{slug}.jpg)"
    end

    def image_dir
      sprintf("uploads/%04d/%02d", @post_date.year, @post_date.month)
    end

    def post_path
      sprintf("_posts/%s/%04d-%02d-%02d-%s.markdown", @categories[0], @post_date.year, @post_date.month, @post_date.day, slug)
    end

    def link_refs
      links = ToastHaiku::LINK_TYPES.map { |type| "[#{type}][]" unless @options[type].empty? }
      '\[' + links.compact.join(', ') + '\]'
    end

    def links
      links = ToastHaiku::LINK_TYPES.map { |type| "[#{type}]: #{@options[type]}" unless @options[type].empty? }
      links.compact
    end

  end

  def self.commit
    run "git add . && git commit -m 'new post' && git push origin master"
  end

  def self.deploy
    commit
    run "rsync -avz _site/ #{ToastHaiku::DEPLOY_TO}"
  end

  def self.run(cmd)
    puts cmd
    system cmd
  end

  def self.usage(cmd)
    puts "ERROR: command not recognized: #{ARGV[0]}"
    puts "Available commands: server, post, preview, commit, deploy"
  end

end

case ARGV[0]
when nil
  opts = {
    categories: %w(shows music),
    post_date: Time.now
  }

  puts "Post title: "
  opts[:title] = gets.chomp # ARGV[1]

  puts "Event date: "
  opts[:event_date] = gets.chomp # Time.parse(ARGV[2])

  ToastHaiku::LINK_TYPES.each do |type|
    puts "#{type}: "
    opts[type] = gets.chomp
  end

  p = ToastHaiku::Post.new opts
  p.save_show_post
  p.save_image
when 'commit'
  ToastHaiku.commit
when 'deploy'
  ToastHaiku.deploy
else
  ToastHaiku.usage(ARGV[0])
end
